<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>潇晗宇浩的博客</title>
    <link>http://blog.xhyh.best/</link>
    
    <atom:link href="/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>记录生活</description>
    <pubDate>Fri, 10 Apr 2020 14:49:13 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>零基础搭建hexo博客并部署到Github Page(二)</title>
      <link>http://blog.xhyh.best/tutorial/zero-to-hexo2/</link>
      <guid>http://blog.xhyh.best/tutorial/zero-to-hexo2/</guid>
      <pubDate>Fri, 10 Apr 2020 02:43:08 GMT</pubDate>
      <description>
      
        &lt;p&gt;&lt;a href=&quot;https://blog.xhyh.best/tutorial/zero-to-hexo1/&quot;&gt;上篇博客&lt;/a&gt;中已经实现在本地预览博客, 本篇会将本地博客部署到Github Page&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<p><a href="https://blog.xhyh.best/tutorial/zero-to-hexo1/">上篇博客</a>中已经实现在本地预览博客, 本篇会将本地博客部署到Github Page</p><a id="more"></a><h4 id="配置github-actions">配置Github Actions</h4><p><code>Github Actions</code> 是 Github 推出的一款持续集成工具, 这里我们可以用来发布博客到<code>Github Page</code></p><ol type="1"><li><p>新建workflow文件</p><p>只有当项目中<code>.github/workflow</code>目录下存在以<code>.yml</code>结尾的配置才会触发<code>Github Actions</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> Blog</span><br><span class="line">mkdir -p .github/workflow</span><br><span class="line">touch .github/workflow/deploy.yml</span><br></pre></td></tr></table></figure></li><li><p>配置<code>deploy.yml</code>文件</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># workflow name</span></span><br><span class="line"><span class="attr">name:</span> <span class="string">Deploy</span> <span class="string">To</span> <span class="string">Github</span> <span class="string">Pages</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 当有 push 到仓库和外部触发的时候就运行</span></span><br><span class="line"><span class="attr">on:</span> <span class="string">[push,</span> <span class="string">repository_dispatch]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ACCESS_TOKEN</span></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">deploy:</span> </span><br><span class="line">    <span class="attr">name:</span> <span class="string">Deploy</span> <span class="string">Hexo</span> <span class="string">Public</span> <span class="string">To</span> <span class="string">Pages</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span> </span><br><span class="line">    <span class="attr">env:</span></span><br><span class="line">      <span class="attr">TZ:</span> <span class="string">Asia/Shanghai</span>    </span><br><span class="line"></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">    <span class="comment"># check it to your workflow can access it</span></span><br><span class="line">    <span class="comment"># from: https://github.com/actions/checkout</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Checkout</span> <span class="string">🛎️</span></span><br><span class="line">      <span class="attr">uses:</span> <span class="string">actions/checkout@v2</span> <span class="comment"># If you're using actions/checkout@v2 you must set persist-credentials    to false in most cases for the deployment to work correctly.</span></span><br><span class="line">      <span class="attr">with:</span></span><br><span class="line">        <span class="attr">persist-credentials:</span> <span class="literal">false</span></span><br><span class="line">        <span class="attr">submodules:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># from: https://github.com/actions/setup-node  </span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Setup</span> <span class="string">Node.js</span> <span class="number">10.</span><span class="string">x</span> <span class="string">🔧</span></span><br><span class="line">      <span class="attr">uses:</span> <span class="string">actions/setup-node@master</span></span><br><span class="line">      <span class="attr">with:</span></span><br><span class="line">        <span class="attr">node-version:</span> <span class="string">"10.x"</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Install</span> <span class="string">pandoc</span> <span class="string">🔧</span></span><br><span class="line">      <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line">        <span class="string">curl</span> <span class="string">-s</span> <span class="string">https://api.github.com/repos/jgm/pandoc/releases/latest</span> <span class="string">|</span> <span class="string">grep</span> <span class="string">"browser_download_url.   *deb"</span> <span class="string">|</span> <span class="string">cut</span> <span class="string">-d</span> <span class="string">'"'</span> <span class="string">-f</span> <span class="number">4</span> <span class="string">|</span> <span class="string">wget</span> <span class="string">-qi</span> <span class="bullet">-</span></span><br><span class="line">        <span class="string">sudo</span> <span class="string">dpkg</span> <span class="string">-i</span> <span class="string">*.deb</span></span><br><span class="line">        </span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Setup</span> <span class="string">Hexo</span> <span class="string">Dependencies</span> <span class="string">🔧</span></span><br><span class="line">      <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line">        <span class="string">npm</span> <span class="string">install</span> <span class="string">hexo-cli</span> <span class="string">-g</span></span><br><span class="line">        <span class="string">npm</span> <span class="string">install</span></span><br><span class="line">        <span class="string">npm</span> <span class="string">run</span> <span class="string">build</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># from https://github.com/marketplace/actions/deploy-to-github-pages   </span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Deploy</span> <span class="string">🚀</span></span><br><span class="line">      <span class="attr">uses:</span> <span class="string">JamesIves/github-pages-deploy-action@releases/v3</span></span><br><span class="line">      <span class="attr">with:</span></span><br><span class="line">        <span class="attr">ACCESS_TOKEN:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.ACCESS_TOKEN</span> <span class="string">&#125;&#125;</span></span><br><span class="line">        <span class="attr">BRANCH:</span> <span class="string">gh-pages</span> <span class="comment"># The branch the action should deploy to.</span></span><br><span class="line">        <span class="attr">FOLDER:</span> <span class="string">public</span> <span class="comment"># The folder the action should deploy.</span></span><br><span class="line">        <span class="attr">COMMIT_MESSAGE:</span> <span class="string">$&#123;&#123;</span> <span class="string">github.event.head_commit.message</span> <span class="string">&#125;&#125;</span></span><br></pre></td></tr></table></figure></li><li><p>流程介绍</p><p>根据上面的配置可以看到主要分为4步</p><ul><li>Checkout 拉取你的博客, 默认拉取本项目</li><li>安装Node环境</li><li>安装Hexo依赖</li><li>部署到Github Page</li></ul><blockquote><p>由于我的博客使用<code>pandoc</code>进行渲染, 所以还多了一步安装<code>pandoc</code>环境</p></blockquote></li></ol><h4 id="生成ssh私钥">生成ssh私钥</h4><p>有了ssh私钥可以实现免密码将博客推送到Github</p><p>具体配置可以参照<a href="https://blog.xhyh.best/tutorial/linux-ssh/">Linux下的ssh配置</a>, 只用完成第一部分ssh生成</p><h4 id="生成access_secret">生成ACCESS_SECRET</h4><p>有了ACCESS_SECRET, <code>Github Actions</code> 才能有权限写入仓库</p><p>可以在Github账户设置中生成一个 <img src="https://pic.rmb.bdstatic.com/3e96456f3136c30e6daee91f21d00176.png" alt="token" /></p><p>至少必须给<code>read, write repo</code>的权限</p><h4 id="在github上新建仓库">在Github上新建仓库</h4><ol type="1"><li>进入<a href="https://github.com/new" target="_blank" rel="noopener">新建仓库页面</a></li><li>新建一个仓库, public和private均可, 但推荐public, 否则Github Page需要另外新建一个仓库 <img src="https://pic.rmb.bdstatic.com/245f3c54feac8e15db0dae57ff18533c.png" alt="new repo" /></li><li>在项目设置中添加ACCESS_SECRET <img src="https://pic.rmb.bdstatic.com/5b364db983b09727ee07df2a9dc54a99.png" alt="secret" /></li><li>根据提示push项目</li></ol><h4 id="查看github-actions工作情况">查看<code>Github Actions</code>工作情况</h4><p>当push项目后, 在Actions选项中能看到已经自动运行部署 <img src="https://pic.rmb.bdstatic.com/8cdc7826c558371149a5198b9fd6e43c.png" alt="workflow" /></p><p>如果有报错信息, 则根据信息修改</p><h4 id="自定义域名设置">自定义域名设置</h4><p>在项目Settings中可以<a href="https://help.github.com/en/github/working-with-github-pages/configuring-a-custom-domain-for-your-github-pages-site" target="_blank" rel="noopener">设置域名</a>并开启https <img src="https://pic.rmb.bdstatic.com/2e181936fe576fb0f0cf484f87d538ad.png" alt="setting" /></p><blockquote><p>注意若设置的是子域名, 则需要在DNS设置中加入CNAME规则, 使子域名指向<code>username.github.io</code></p></blockquote><h4 id="写作发布流程">写作发布流程</h4><p>至此, 应该能使用<code>username.github.io</code>访问你的博客了, 后续写作的流程是</p><ol type="1"><li><code>hexo new 'Hello world'</code> 生成新文章</li><li>写作</li><li><code>git add</code>, <code>git commit</code>, <code>git push</code></li><li><code>Github Actions</code> 自动部署</li></ol>]]></content:encoded>
      
      <comments>http://blog.xhyh.best/tutorial/zero-to-hexo2/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Hello new blog</title>
      <link>http://blog.xhyh.best/talk/hello-new-blog/</link>
      <guid>http://blog.xhyh.best/talk/hello-new-blog/</guid>
      <pubDate>Wed, 08 Apr 2020 10:50:46 GMT</pubDate>
      <description>
      
        &lt;p&gt;最近闲了下来, 计划慢慢输出一点这段时间学习的内容, 便重新打理了一下博客&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<p>最近闲了下来, 计划慢慢输出一点这段时间学习的内容, 便重新打理了一下博客</p><a id="more"></a><h4 id="为什么不使用老博客">为什么不使用老博客</h4><ol type="1"><li>老博客基于<code>diygod</code>主题改造, 虽尽力保持简洁了很多, 但一段时间后发现还是不利于文章阅读</li><li><code>diygod</code> 主题过于复杂, 不利于修改和维护</li><li>老博客采用源码私库备份, <code>Github page</code> 部署的策略, 但非常不利于维护, 发布文章也不方便</li></ol><h4 id="新博客的优势">新博客的优势</h4><ol type="1"><li>更加简洁的外观</li><li>基于<a href="https://github.com/achjqz/hexo-theme-apollo" target="_blank" rel="noopener">apollo</a>主题修改, 额外支持了<code>tag</code>显示和<code>category</code>界面</li><li>使用<code>Github Actions</code>持续集成, 语雀云端写作, 维护和写作更加方便</li></ol><h4 id="新博客的内容">新博客的内容</h4><ol type="1"><li>旧博客内容的整理, 升级</li><li>各种折腾的笔记</li><li>学习知识的整理输出</li><li>生活</li></ol>]]></content:encoded>
      
      <comments>http://blog.xhyh.best/talk/hello-new-blog/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Linux下ssh的配置</title>
      <link>http://blog.xhyh.best/tutorial/linux-ssh/</link>
      <guid>http://blog.xhyh.best/tutorial/linux-ssh/</guid>
      <pubDate>Fri, 28 Sep 2018 08:25:43 GMT</pubDate>
      <description>
      
        &lt;p&gt;本文带你了解ssh, 如何实现ssh免密码登陆? 如何使用ssh做端口转发, 跳板?&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<p>本文带你了解ssh, 如何实现ssh免密码登陆? 如何使用ssh做端口转发, 跳板?</p><a id="more"></a><h4 id="生成ssh-key">生成ssh key</h4><p>本文以Linux为例, 其他平台可参照<a href="https://help.github.com/en/github/authenticating-to-github/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent" target="_blank" rel="noopener">Github官方文档</a>操作</p><ol type="1"><li><p>生成2048位的密匙 <code>passphrase</code> 可以设置为空</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -b 4096 -C <span class="string">"your_email@example.com"</span></span><br></pre></td></tr></table></figure></li><li><p>设置权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># .ssh directory: 700 (drwx------)</span></span><br><span class="line">chmod 700 .ssh</span><br><span class="line"><span class="comment"># public key (.pub file): 644 (-rw-r--r--)</span></span><br><span class="line">chmod 644 .ssh/id_rsa.pub</span><br><span class="line"><span class="comment"># private key (id_rsa): 600 (-rw-------)</span></span><br><span class="line">chmod 600 .ssh/id_rsa</span><br></pre></td></tr></table></figure></li></ol><h4 id="服务器设置">服务器设置</h4><ol type="1"><li><p>将公匙用<code>ssh-copy-id</code> 命令传给服务器,实现ssh免密码登陆</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-copy-id -i ~/.ssh/id_rsa.pub root@serverip</span><br></pre></td></tr></table></figure></li><li><p>服务器端设置<code>/etc/ssh/sshd_config</code>, 使得不能用密码登陆root用户</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /etc/ssh/sshd_config</span><br><span class="line"></span><br><span class="line"><span class="comment">#修改配置</span></span><br><span class="line">PermitRootLogin yes</span><br><span class="line">PasswordAuthentication no</span><br></pre></td></tr></table></figure></li><li><p>本地新建一个config文件,填入服务器信息,实现简化登陆</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">touch ~/.ssh/config</span><br><span class="line"><span class="comment"># config file</span></span><br><span class="line">Host name</span><br><span class="line">  Hostname serverip</span><br><span class="line">  User root</span><br></pre></td></tr></table></figure></li><li><p>查看服务器ssh登陆日志</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">scp name:/var/<span class="built_in">log</span>/btmp btmp</span><br><span class="line"></span><br><span class="line"><span class="comment"># 筛选日志信息, 实现显示 次数+ IP</span></span><br><span class="line">lastb -f btmp | awk <span class="string">'&#123;print $3&#125;'</span> | sort | uniq -c | sort -nr | more</span><br></pre></td></tr></table></figure></li></ol><h4 id="ssh高级操作">ssh高级操作</h4><ol type="1"><li><p>实现端口转发,将服务器用作代理访问其他网站</p><p>命令: <code>ssh -N -f -L  \&lt;local port&gt;:\&lt;remote host&gt;:\&lt;remote port&gt; \&lt;SSH hostname&gt;</code></p><p>这样就将IP为remote host机器的remote port通过中间服务器映射到本地机器的localport</p><blockquote><p>解释:</p><p>-N 指这个连接不需要执行任何命令。仅仅做端口转发</p><p>-f 在后台运行</p><p>-L 做本地映射端口，被冒号分割的三个部分含义分别是</p><p>需要使用的本地端口号 </br> ​需要访问的目标机器IP地址 </br> 需要访问的目标机器端口 </br></p></blockquote></li><li><p>将私匙添加到ssh-agent,避免每次都要输密码</p><p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># start ssh-agent</span></span><br><span class="line"><span class="built_in">eval</span> <span class="string">"<span class="variable">$(ssh-agent -s)</span>"</span></span><br><span class="line">&gt; Agent pid 59566</span><br><span class="line"></span><br><span class="line"><span class="comment"># add ssh key</span></span><br><span class="line">ssh-add ~/.ssh/id_rsa</span><br></pre></td></tr></table></figure></p></li><li><p>跳板登陆 本地A, 跳板服务器B, 目标服务器C</p><p>首先将本地A均可以ssh登陆B和C</p><p>当连接服务器B时,使用ssh -A命令, 以打开agent forwarding</p><p>当服务器B连接服务器C时, 就不用再输密码了, 相当于这台服务器充当了转发信息的功能,把私钥操作的request转发到了本机的agent, 然后再将agent的response原路返回</p></li></ol>]]></content:encoded>
      
      <comments>http://blog.xhyh.best/tutorial/linux-ssh/#disqus_thread</comments>
    </item>
    
    <item>
      <title>零基础搭建hexo博客并部署到Github Page(一)</title>
      <link>http://blog.xhyh.best/tutorial/zero-to-hexo1/</link>
      <guid>http://blog.xhyh.best/tutorial/zero-to-hexo1/</guid>
      <pubDate>Sat, 14 Apr 2018 14:18:32 GMT</pubDate>
      <description>
      
        &lt;p&gt;用Hexo + Github来搭建个人博客已经很普遍了, 正好Github action发布, 可以利用持续集成使得部署更加轻松&lt;br /&gt;
本文从零开始, 搭建hexo博客并用Github Actions发布到Github Page&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<p>用Hexo + Github来搭建个人博客已经很普遍了, 正好Github action发布, 可以利用持续集成使得部署更加轻松<br />本文从零开始, 搭建hexo博客并用Github Actions发布到Github Page</p><a id="more"></a><h4 id="工具介绍及安装">工具介绍及安装</h4><ol type="1"><li><code>Git</code> 版本管理工具, 用于管理写的文章, 并和Github仓库建立连接, <a href="https://git-scm.com/" target="_blank" rel="noopener">官网安装</a></li><li><code>node.js</code> 为hexo提供JavaScript环境 <a href="https://nodejs.org/en/" target="_blank" rel="noopener">官网安装</a></li><li><code>Github Pages</code> Github 官网提供的一个服务, 将博客部署到它上面, 避免自己购买服务器, 无需安装</li></ol><h4 id="hexo和主题安装">hexo和主题安装</h4><blockquote><p>hexo 和 hexo 主题的关系<br />hexo 主题定义了博客的界面布局, 颜色, 脚本等<br />hexo 将内容交给hexo 主题生成对应的排版</p></blockquote><ol type="1"><li><p>hexo 安装 <a href="https:/.io/" target="_blank" rel="noopener">官方文档</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br></pre></td></tr></table></figure></li><li><p>生成默认博客</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo init blog</span><br><span class="line"><span class="built_in">cd</span> blog</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure></li><li><p>下载主题</p><p>这里以<code>apollo</code>主题为例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-renderer-pug\</span><br><span class="line"> hexo-generator-feed \</span><br><span class="line"> hexo-generator-sitemap \ </span><br><span class="line"> hexo-browsersync  \</span><br><span class="line"> hexo-generator-archive \</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/achjqz/hexo-theme-apollo.git themes/apollo</span><br></pre></td></tr></table></figure></li></ol><h4 id="博客配置">博客配置</h4><p>博客的配置主要都在<code>_config.yml</code>中</p><ol type="1"><li><p>主题相关配置 <figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">...</span></span><br><span class="line"><span class="comment"># 修改主题名称</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">apollo</span></span><br><span class="line"><span class="attr">theme_config:</span> </span><br><span class="line">  <span class="comment"># google analyse 配置</span></span><br><span class="line">  <span class="attr">ga:</span> <span class="string">UA-117536047-1</span></span><br><span class="line">  <span class="comment"># 评论区配置</span></span><br><span class="line">  <span class="attr">gitalk:</span></span><br><span class="line">    <span class="attr">on:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">owner:</span> <span class="string">achjqz</span></span><br><span class="line">    <span class="attr">repo:</span> <span class="string">blog</span></span><br><span class="line">    <span class="attr">admin:</span> <span class="string">['achjqz']</span></span><br><span class="line">    <span class="attr">clientID:</span> <span class="string">1ad726ece750d0552748</span></span><br><span class="line">    <span class="attr">clientSecret:</span> <span class="string">6917691391883046d263b52a7107fab68e457194</span></span><br><span class="line"><span class="string">...</span></span><br></pre></td></tr></table></figure></p></li><li><p>博客url配置 <figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">url:</span> <span class="string">http://blog.xhyh.best</span></span><br><span class="line"><span class="attr">root:</span> <span class="string">/</span></span><br><span class="line"><span class="attr">permalink:</span> <span class="string">:category/:urlname/</span></span><br><span class="line"><span class="attr">new_post_name:</span> <span class="string">:year:month:day-:title.md</span></span><br></pre></td></tr></table></figure></p><blockquote><p>为方便整理, 生成新文章会有时间前缀<br />而我们不希望在文章链接中包含时间, 这里使用了urlname, 需要在每篇文章头中添加这个变量</p></blockquote></li></ol><h4 id="常用命令">常用命令</h4><ol type="1"><li><code>hexo clean</code> 清除缓存和生成的public文件夹</li><li><code>hexo g</code> generator 生成public文件</li><li><code>hexo s</code> server 本地预览, 加参数<code>--debug</code>可查看具体信息</li><li><code>hexo d</code> deploy 部署到github</li></ol><h4 id="增加categorytag页面">增加category/tag页面</h4><p>默认并没有category, tag页面, 需要在命令行中输入命令添加</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page category</span><br></pre></td></tr></table></figure><p></br></p><p><a href="https://blog.xhyh.best/tutorial/zero-to-hexo2/">下一篇</a>将介绍如何使用 Github Actions 部署博客</p>]]></content:encoded>
      
      <comments>http://blog.xhyh.best/tutorial/zero-to-hexo1/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
